{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3e1b570e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"w-1/2\",\n  id: \"image\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"modal-body\",\n  id: \"desc\"\n};\nconst _hoisted_5 = {\n  class: \"my-2\"\n};\nconst _hoisted_6 = {\n  class: \"font-black text-center md:text-left\"\n};\nconst _hoisted_7 = {\n  class: \"tag\"\n};\nconst _hoisted_8 = {\n  class: \"my-2\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"font-bold\"\n}, \"Ingredients: \", -1));\nconst _hoisted_10 = {\n  class: \"my-2\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"font-bold\"\n}, \"Instructions:\", -1));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"modal-container\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers($event => _ctx.$emit('toggleModal'), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    class: \"img-recipe\",\n    src: this.result.strMealThumb\n  }, null, 8, _hoisted_3)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h1\", _hoisted_6, _toDisplayString($props.result.strMeal), 1), _createElementVNode(\"p\", _hoisted_7, _toDisplayString($props.result.strCategory), 1)]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.ingredients, ingredient => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      class: \"mx-5 list-disc\",\n      key: ingredient\n    }, [_createElementVNode(\"li\", null, _toDisplayString(ingredient), 1)]);\n  }), 128))]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"p\", null, _toDisplayString($props.result.strInstructions), 1)])])])]);\n}","map":{"version":3,"mappings":";;;EAEaA,KAAK,EAAC;AAAO;;EACTA,KAAK,EAAC,OAAO;EAACC,EAAE,EAAC;;;;EAGjBD,KAAK,EAAC,YAAY;EAACC,EAAE,EAAC;;;EAClBD,KAAK,EAAC;AAAM;;EACTA,KAAK,EAAC;AAAqC;;EAC5CA,KAAK,EAAC;AAAK;;EAEbA,KAAK,EAAC;AAAM;gEACbE,oBAAwC;EAApCF,KAAK,EAAC;AAAW,GAAC,eAAa;;EAKlCA,KAAK,EAAC;AAAM;iEACbE,oBAAsC;EAAnCF,KAAK,EAAC;AAAW,GAAC,eAAa;;uBAjBlDG,oBAsBM;IAtBDH,KAAK,EAAC,iBAAiB;IAAEI,OAAK,qDAAOC,UAAK;MAC3CH,oBAoBM,OApBNI,UAoBM,GAnBFJ,oBAEM,OAFNK,UAEM,GADFL,oBAAwD;IAAnDF,KAAK,EAAC,YAAY;IAAEQ,GAAG,OAAOC,MAAM,CAACC;6BAE9CR,oBAeM,OAfNS,UAeM,GAdFT,oBAGM,OAHNU,UAGM,GAFFV,oBAAyE,MAAzEW,UAAyE,mBAAtBC,aAAM,CAACC,OAAO,OACjEb,oBAA2C,KAA3Cc,UAA2C,mBAAzBF,aAAM,CAACG,WAAW,SAExCf,oBAKM,OALNgB,UAKM,GAJFC,UAAwC,qBACxChB,oBAEKiB,6BAF2CC,iBAAW,EAAzBC,UAAU;yBAA5CnB,oBAEK;MAFDH,KAAK,EAAC,gBAAgB;MAAoCuB,GAAG,EAAED;QAC/DpB,oBAAyB,6BAAlBoB,UAAU;eAGzBpB,oBAGM,OAHNsB,WAGM,GAFFC,WAAsC,EACtCvB,oBAAmC,4BAA7BY,aAAM,CAACY,eAAe","names":["class","id","_createElementVNode","_createElementBlock","onClick","_ctx","_hoisted_1","_hoisted_2","src","result","strMealThumb","_hoisted_4","_hoisted_5","_hoisted_6","$props","strMeal","_hoisted_7","strCategory","_hoisted_8","_hoisted_9","_Fragment","$data","ingredient","key","_hoisted_10","_hoisted_11","strInstructions"],"sourceRoot":"","sources":["C:\\laragon\\www\\Projects\\Vue-recipe-book\\src\\components\\results\\ResultModal.vue"],"sourcesContent":["<template>\r\n    <div class=\"modal-container\" @click.self=\"$emit('toggleModal')\">\r\n        <div class=\"modal\">\r\n            <div class=\"w-1/2\" id=\"image\">\r\n                <img class=\"img-recipe\" :src=\"this.result.strMealThumb\">\r\n            </div>\r\n            <div class=\"modal-body\" id=\"desc\">\r\n                <div class=\"my-2\">\r\n                    <h1 class=\"font-black text-center md:text-left\">{{ result.strMeal }}</h1>\r\n                    <p class=\"tag\">{{ result.strCategory }}</p>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <h2 class=\"font-bold\">Ingredients: </h2>\r\n                    <ul class=\"mx-5 list-disc\" v-for=\"ingredient in ingredients\" :key=\"ingredient\">\r\n                        <li>{{ ingredient }}</li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <p class=\"font-bold\">Instructions:</p>\r\n                    <p>{{ result.strInstructions }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'ResultModal',\r\n    props: ['result'],\r\n    data() {\r\n        return {\r\n            ingredients: [],\r\n        }\r\n    },\r\n    \r\n    mounted() {\r\n        let count = 1\r\n        for(let i in this.result){\r\n            let ingredient = ''\r\n            let measure = ''\r\n            if (i.startsWith('strIngredient') && this.result[i]) {\r\n                ingredient = this.result[i]\r\n                measure = this.result[`strMeasure` + count]\r\n                count += 1\r\n                this.ingredients.push(`${measure} ${ingredient}`)\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"postcss\" scoped>\r\n.modal-container {\r\n    @apply fixed w-full h-full inset-0 z-20 bg-black bg-opacity-60 p-2\r\n}\r\n\r\n.modal {\r\n    @apply flex lg:flex-row flex-col items-center bg-white w-3/4 lg:w-4/5 xl:w-2/3 h-[95%] lg:h-[90%] rounded-xl mx-auto my-7 overflow-auto\r\n}\r\n\r\n.modal-body {\r\n    @apply flex flex-col w-full h-full lg:w-1/2 p-5 md:p-10 overflow-y-scroll\r\n}\r\n\r\n.img-recipe {\r\n    @apply max-w-full py-3 object-cover object-center rounded-xl mx-auto md:mx-5 flex\r\n}\r\n.tag {\r\n    @apply bg-amber-500 text-white mt-3 ml-1 py-1 px-5 w-fit rounded-xl\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}