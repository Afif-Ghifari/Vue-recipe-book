{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ResultModal',\n  props: ['result'],\n  data() {\n    return {\n      ingredients: []\n    };\n  },\n  mounted() {\n    let count = 1;\n    for (let i in this.result) {\n      let ingredient = '';\n      let measure = '';\n      if (i.startsWith('strIngredient') && this.result[i]) {\n        ingredient = this.result[i];\n        measure = this.result[`strMeasure` + count];\n        count += 1;\n        this.ingredients.push(`${measure} ${ingredient}`);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA0BA,eAAe;EACXA,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,CAAC,QAAQ,CAAC;EACjBC,IAAI,GAAG;IACH,OAAO;MACHC,WAAW,EAAE;IACjB;EACJ,CAAC;EAEDC,OAAO,GAAG;IACN,IAAIC,KAAI,GAAI;IACZ,KAAI,IAAIC,KAAK,IAAI,CAACC,MAAM,EAAC;MACrB,IAAIC,UAAS,GAAI,EAAC;MAClB,IAAIC,OAAM,GAAI,EAAC;MACf,IAAIH,CAAC,CAACI,UAAU,CAAC,eAAe,KAAK,IAAI,CAACH,MAAM,CAACD,CAAC,CAAC,EAAE;QACjDE,UAAS,GAAI,IAAI,CAACD,MAAM,CAACD,CAAC;QAC1BG,OAAM,GAAI,IAAI,CAACF,MAAM,CAAE,YAAU,GAAIF,KAAK;QAC1CA,KAAI,IAAK;QACT,IAAI,CAACF,WAAW,CAACQ,IAAI,CAAE,GAAEF,OAAO,IAAID,UAAW,EAAC;MACpD;IACJ;EACJ;AACJ","names":["name","props","data","ingredients","mounted","count","i","result","ingredient","measure","startsWith","push"],"sourceRoot":"","sources":["C:\\laragon\\www\\Projects\\Vue-recipe-book\\src\\components\\results\\ResultModal.vue"],"sourcesContent":["<template>\r\n    <div class=\"modal-container\" @click.self=\"$emit('toggleModal')\">\r\n        <div class=\"modal\">\r\n            <div class=\"w-1/2\" id=\"image\">\r\n                <img class=\"img-recipe\" :src=\"this.result.strMealThumb\">\r\n            </div>\r\n            <div class=\"modal-body\" id=\"desc\">\r\n                <div class=\"my-2\">\r\n                    <h1 class=\"font-black text-center md:text-left\">{{ result.strMeal }}</h1>\r\n                    <p class=\"tag\">{{ result.strCategory }}</p>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <h2 class=\"font-bold\">Ingredients: </h2>\r\n                    <ul class=\"mx-5 list-disc\" v-for=\"ingredient in ingredients\" :key=\"ingredient\">\r\n                        <li>{{ ingredient }}</li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"my-2\">\r\n                    <p class=\"font-bold\">Instructions:</p>\r\n                    <p>{{ result.strInstructions }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'ResultModal',\r\n    props: ['result'],\r\n    data() {\r\n        return {\r\n            ingredients: [],\r\n        }\r\n    },\r\n    \r\n    mounted() {\r\n        let count = 1\r\n        for(let i in this.result){\r\n            let ingredient = ''\r\n            let measure = ''\r\n            if (i.startsWith('strIngredient') && this.result[i]) {\r\n                ingredient = this.result[i]\r\n                measure = this.result[`strMeasure` + count]\r\n                count += 1\r\n                this.ingredients.push(`${measure} ${ingredient}`)\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"postcss\" scoped>\r\n.modal-container {\r\n    @apply fixed w-full h-full inset-0 z-20 bg-black bg-opacity-60 p-2\r\n}\r\n\r\n.modal {\r\n    @apply flex lg:flex-row flex-col items-center bg-white w-3/4 lg:w-4/5 xl:w-2/3 h-[95%] lg:h-[90%] rounded-xl mx-auto my-7 overflow-auto\r\n}\r\n\r\n.modal-body {\r\n    @apply flex flex-col w-full h-full lg:w-1/2 p-5 md:p-10 overflow-y-scroll\r\n}\r\n\r\n.img-recipe {\r\n    @apply max-w-full py-3 object-cover object-center rounded-xl mx-auto md:mx-5 flex\r\n}\r\n.tag {\r\n    @apply bg-amber-500 text-white mt-3 ml-1 py-1 px-5 w-fit rounded-xl\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}